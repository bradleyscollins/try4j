<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="compile" name="try4j">
  <property name="project.title">Try4J</property>
  <property name="project.version">1.2</property>
  <property name="project.vendor">Bradley S. Collins</property>
  
  <tstamp>
    <format property="NOW" pattern="yyyy-MM-dd HH:mm:ss" />
  </tstamp>

  <property environment="env" />
  <property name="junit.output.dir" value="junit" />
  <property name="debuglevel" value="source,lines,vars" />
  <property name="target" value="1.8" />
  <property name="source" value="1.8" />

  <property name="src.dir" value="src/main/java"/>
  <property name="test.src.dir" value="src/test/java"/>
  <property name="examples.src.dir" value="src/examples/java"/>
  <property name="build.dir" value="build"/>
  <property name="class.dir" value="${build.dir}/main/classes"/>
  <property name="test.class.dir" value="${build.dir}/test/classes"/>
  <property name="test.output.dir" value="${build.dir}/test/output"/>
  <property name="examples.class.dir" value="${build.dir}/examples/classes"/>
  <property name="bin.dir" value="binaries"/>

  <path id="try4j.classpath">
    <pathelement location="${class.dir}" />
  </path>
  <path id="try4j.test.classpath">
    <pathelement location="${class.dir}" />
    <pathelement location="${test.class.dir}" />
    <pathelement location="lib/hamcrest-all-1.3.jar" />
    <pathelement location="lib/junit-4.11.jar" />
  </path>
  <path id="try4j.examples.classpath">
    <pathelement location="${class.dir}" />
    <pathelement location="${examples.class.dir}" />
  </path>

  <target name="clean">
    <delete dir="${build.dir}" />
  </target>

  <target name="init">
    <mkdir dir="${class.dir}" />
    <!-- Copy non-Java resources to class directory -->
    <copy includeemptydirs="false" todir="${class.dir}">
      <fileset dir="${src.dir}">
        <exclude name="**/*.launch" />
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>

  <target name="compile" depends="init">
    <echo message="${ant.project.name}: ${ant.file}" />
    <echo message="Compiling ${ant.project.name}" />
    <javac verbose="true" debug="true" debuglevel="${debuglevel}" 
        destdir="${class.dir}" includeantruntime="false" source="${source}" 
        target="${target}">
      <src path="${src.dir}" />
      <classpath refid="try4j.classpath" />
    </javac>
    <mkdir dir="${class.dir}/META-INF"/>
    <manifest file="${class.dir}/META-INF/MANIFEST.MF">
      <attribute name="Built-By" value="${project.vendor}" />
      <attribute name="Main-Class" value="n/a" />
      <attribute name="Specification-Title" value="${project.title}" />
      <attribute name="Specification-Version" value="${project.version}" />
      <attribute name="Specification-Vendor" value="${project.vendor}" />
      <attribute name="Implementation-Title" value="${ant.project.name}" />
      <attribute name="Implementation-Version" value="${NOW}" />
      <attribute name="Implementation-Vendor" value="${project.vendor}" />
    </manifest>
  </target>

  <target name="package" depends="compile">
    <echo message="Packaging ${project.title} version ${project.version}" />
    <jar destfile="${bin.dir}/${ant.project.name}-${project.version}.jar"
      manifest="${class.dir}/META-INF/MANIFEST.MF">
      <fileset dir="${class.dir}"/>
    </jar>
  </target>
  
  <target name="init.tests" depends="compile">
    <mkdir dir="${test.class.dir}" />
    <!-- Copy non-Java resources to class directory -->
    <copy includeemptydirs="false" todir="${test.class.dir}">
      <fileset dir="${test.src.dir}">
        <exclude name="**/*.launch" />
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>

  <target name="compile.tests" depends="init.tests">
    <echo message="Compiling ${ant.project.name} tests" />
    <javac verbose="true" debug="true" debuglevel="${debuglevel}"
        destdir="${test.class.dir}" includeantruntime="false" 
        source="${source}" target="${target}">
      <src path="${test.src.dir}" />
      <classpath refid="try4j.test.classpath" />
    </javac>
  </target>

  <target name="run.tests" depends="compile.tests">
    <mkdir dir="${test.output.dir}" />
    <junit fork="yes" printsummary="withOutAndErr" showoutput="yes">
      <formatter type="brief" usefile="false"/>
      <formatter type="xml" />
      <batchtest todir="${test.output.dir}">
        <fileset dir="${test.class.dir}" includes="**/*.class"/>
      </batchtest>
      <classpath refid="try4j.test.classpath" />
    </junit>
  </target>
  
  <target name="test.report" depends="run.tests">
    <junitreport todir="${test.output.dir}">
      <fileset dir="${test.output.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${test.output.dir}"/>
    </junitreport>
  </target>
  
  <target name="init.examples" depends="compile">
    <mkdir dir="${examples.class.dir}" />
    <!-- Copy non-Java resources to class directory -->
    <copy includeemptydirs="false" todir="${examples.class.dir}">
      <fileset dir="${examples.src.dir}">
        <exclude name="**/*.launch" />
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>

  <target name="compile.examples" depends="init.examples">
    <echo message="Compiling ${ant.project.name} examples" />
    <javac verbose="true" debug="true" debuglevel="${debuglevel}" 
        destdir="${examples.class.dir}" includeantruntime="false" 
        source="${source}" target="${target}">
      <src path="${examples.src.dir}" />
      <classpath refid="try4j.examples.classpath" />
    </javac>
  </target>

  <target name="run.examples" depends="compile.examples">
    <java classname="try4j.examples.NicsWithoutTry" classpathref="try4j.examples.classpath"/>
    <java classname="try4j.examples.NicsWithTry" classpathref="try4j.examples.classpath"/>
    <!-- Cannot run the following batchwise: requires user input from console -->
    <!-- java classname="try4j.examples.UserInput" classpathref="try4j.examples.classpath"/ -->
  </target>
</project>
